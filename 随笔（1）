学习网址：https://www.jianshu.com/p/c45af0ddd68a

configure --prefix=  用途是：编译的时候 指定程序存放路径
./configure --prefix="/home/zck/zhuchengkai/software/Python-3.6.4rc1"
进入解压文件，文件中有configure文件

---------------------------------------------------------------
一、安装流程如下：
用于linux源码安装软件，一般下载源码包得到文件：xxxx.tgz
====================================
1、解包软件
        tar zxf xxxx.tgz
====================================
2、配置
        cd xxxx
        ./configure ....
====================================
3、编译
        make
====================================
4、安装
        make install
====================================
5、卸载        
make uninstall
====================================
二、配置软件的环境变量：
vim ~/.bash_profile
# python 环境变量
export PATH="$PATH:/home/zck/zhuchengkai/software/Python-3.6.4rc1/";
# pip3 环境变量
export PATH="$PATH:/home/zck/zhuchengkai/software/Python-3.6.4rc1/bin/";

环境变量立即生效：source ~/.bash_profile

注：当你运行python的时候还是2.7版本的，因为python3的执行脚本名字也叫python(和python2.7一样)，所以执行脚本需要改名字
cp python python3

安装其他包
pip3 install pandas
pip3 install numpy
pip3 install scipy
pip3 install sklearn

通配符和正则表达式的区别：
通配符，说白了一般只用于文件名匹配， 它是由shell解析的。
shell大多将三个特殊符号当作通配符，它们是 * ? [...]， 
其中 * 表示匹配任意长度的任意字符； ? 表示匹配一个任意字符， 而[...]则表示匹配括号中列出的字符中的任意一个。
正则表达式，可以把正则表达式看成是一种字符串匹配模式标准。

rm -f second_clean/*   -f不提示是否删除文件的信息，直接删除

find . ! -name 2 -exec cp {} ../01 \;  将当前路径下的非2的文件复制到../01
split -l10 lsq.txt 将文件snplist每10行拆分并生成新的小文件xaa...

grep  用法：grep [options] ‘pattern’ filename  第一个参数是要匹配的，第二个参数是处理的文件
-v （小写v）不匹配，即反向查找
-i 匹配是不区分大小写
 -w 用于字符串精确匹配
 -B les test.txt |grep -w -B2 "96"精确匹配有96的行，并且把它前两行也一同输出 （B:before）
 -A （A:after）之后几行
 -E 以正则表达式的形式进行匹配
 -c 统计匹配的个数
 grep -w -A1 -F -f<(cut -f2 xab.txt) test.txt
 
 如果程序没有使用nohup和&，想放入后台：Ctrl + Z(先暂停)，jobs(查看进程号)，bg %进程号（将程序放入后台），disown -h %进程号
 



